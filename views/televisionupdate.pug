extends layout 
 
block content 
  h1(class = 'container-fluid p-5 bg-primary text-success text-center')= title 
  if (toShow == null) 
    h2 No instance to Update View 
  else 
    - let id = toShow._id 
    - let tele_name = toShow.tele_name 
    - let size = toShow.size 
    - let cost = toShow.cost 
   
    div.row(class='d-flex justify-content-center p-2 bg-light text-center text-success') 
        div.mr-1(class = "p-2 flex-fill") ID is #{id} 
    - let actionid = "/resource/television/" + id 
    form(id='TelevisionForm',class='justify-content-center p-2 bg-light text-center text-dark', action= actionid, method="PUT") 
        div.form-group 
            label.televisionAttr(for='tele_name') Television Name 
            input#tele_name(type='text', name='tele_name', value= tele_name )
        br
        div.form-group 
            label.televisionAttr(for='size') Television size 
            input#size(type='text', name='size', value= size )
        br    
        div.form-group 
            label.televisionAttr(for='cost') Television cost 
            input#cost(type='number', name='cost', value= cost ) 
        br
        input(class="btn btn-danger" type="submit") 
 
  script. 
    document.forms['TelevisionForm'].addEventListener('submit', (event) => { 
      event.preventDefault(); 
      // TODO do something here to show user that form is being submitted 
      fetch(event.target.action, { 
        method: 'PUT', 
        body: new URLSearchParams(new FormData(event.target)) // event.target is the form 
      }).then((resp) => { 
        return resp.json(); // or resp.text() or whatever the server sends 
      }).then((body) => { 
        alert("Update succeded") 
        // TODO handle body 
      }).catch((error) => { 
        // TODO handle error 
        alert("Update failed " + error ) 
      }); 
    }); 